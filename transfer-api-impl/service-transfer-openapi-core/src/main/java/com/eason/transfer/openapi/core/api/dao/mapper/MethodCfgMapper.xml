<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- API方法 -->
<mapper namespace="com.eason.transfer.openapi.core.api.dao.mapper.MethodCfgMapper">

    <resultMap id="methodCfgMap" type="com.eason.transfer.openapi.core.api.dao.model.ApiMethodCfg">
        <result property="id" column="ID"/>
        <result property="methodId" column="METHOD_ID"/>
        <result property="ver" column="VER"/>
        <result property="cfgValue" column="CFG_VALUE"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="updateTime" column="UPDATE_TIME"/>
        <result property="method" column="METHOD"/>
    </resultMap>

    <resultMap id="methodNameMap" type="com.eason.transfer.openapi.core.api.dao.model.ApiMethod">
        <result property="id" column="ID"/>
        <result property="methodType" column="METHOD_TYPE"/>
        <result property="method" column="METHOD"/>
        <result property="methodName" column="METHOD_NAME"/>
        <result property="methodMemo" column="METHOD_MEMO"/>
    </resultMap>

    <select id="methodcfgTotalRecord" resultType="int">
        select count(1) from API_METHOD_CFG where 1=1
    </select>

    <select id="methodcfgConditionTotalRecord" resultType="int" parameterType="java.util.HashMap">
        select count(1) from API_METHOD_CFG c,OO_API_METHOD m where 1=1 and c.METHOD_ID=m.id
        <if test="methodName !=null and methodName !='' ">
            and m.METHOD like CONCAT('%',#{methodName},'%')
        </if>
    </select>

    <select id="methodcfgPageSelect" resultMap="methodCfgMap" parameterType="java.util.HashMap">
        select
        c.ID,c.METHOD_ID,c.VER,c.CFG_VALUE,c.IS_DELETED,c.CREATE_TIME,c.UPDATE_TIME,c.CREATE_BY,c.UPDATE_BY,m.METHOD
        from API_METHOD_CFG c,OO_API_METHOD m where c.METHOD_ID=m.ID limit #{startRow},10
    </select>

    <select id="methodcfgPageSelectByCondition" resultMap="methodCfgMap" parameterType="java.util.HashMap">
        select
        c.ID,c.METHOD_ID,c.VER,c.CFG_VALUE,c.IS_DELETED,c.CREATE_TIME,c.UPDATE_TIME,c.CREATE_BY,c.UPDATE_BY,m.METHOD
        from API_METHOD_CFG c,OO_API_METHOD m where 1=1 and c.METHOD_ID=m.id
        <if test="methodName != null and methodName !=''">
            and m.METHOD LIKE CONCAT('%',#{methodName},'%')
        </if>
        limit #{startRow},10
    </select>


    <select id="getMethodCfgById" resultMap="methodNameMap">
        select
        ID,METHOD_TYPE,METHOD,METHOD_NAME,METHOD_MEMO,INVOKE_MIN_MAX_NUM,INVOKE_DAY_MAX_NUM,AUTH_LEVEL,IS_UPDATED,XML_RESULT,JSON_RESULT,CREATE_TIME,UPDATE_TIME,UPDATE_BY,CREATE_BY,IS_EXTRAS,IS_OPEN
        from OO_API_METHOD where id=#{id}
    </select>

    <select id="getMethodList" resultMap="methodNameMap">
        select
        ID,METHOD_TYPE,METHOD,METHOD_NAME,METHOD_MEMO,INVOKE_MIN_MAX_NUM,INVOKE_DAY_MAX_NUM,AUTH_LEVEL,IS_UPDATED,XML_RESULT,JSON_RESULT,CREATE_TIME,UPDATE_TIME,UPDATE_BY,CREATE_BY,IS_EXTRAS,IS_OPEN
        from OO_API_METHOD

    </select>

    <select id="getMethodCfgList" resultMap="methodCfgMap">
        select
        c.ID,c.METHOD_ID,c.VER,c.CFG_VALUE,c.IS_DELETED,c.CREATE_TIME,c.UPDATE_TIME,c.CREATE_BY,c.UPDATE_BY,m.METHOD
        from API_METHOD_CFG c,OO_API_METHOD m where c.METHOD_ID=m.ID

    </select>

    <select id="getMethodListByCondition" resultMap="methodNameMap" parameterType="java.util.HashMap">
        select
        m.ID,m.METHOD_TYPE,m.METHOD,m.METHOD_NAME,m.METHOD_MEMO,m.INVOKE_MIN_MAX_NUM,m.INVOKE_DAY_MAX_NUM,m.AUTH_LEVEL,m.IS_UPDATED,m.XML_RESULT,m.JSON_RESULT,m.CREATE_TIME,m.UPDATE_TIME,m.UPDATE_BY,m.CREATE_BY,m.IS_EXTRAS,m.IS_OPEN,c.CATE_DESCRIPTION
        from OO_API_METHOD m , OO_API_METHOD_CATEGORY c
        where m.METHOD_TYPE=c.ID
        <if test="apiInterface != null">
            and METHOD LIKE CONCAT('%',#{apiInterface},'%')
        </if>

        <if test="methodName != null">
            and METHOD_NAME LIKE CONCAT('%',#{methodName},'%')
        </if>

    </select>

    <update id="updateMethod" parameterType="com.eason.transfer.openapi.core.api.dao.model.ApiMethod">
        update OO_API_METHOD
        <set>
            <if test="methodType != null">
                METHOD_TYPE = #{methodType},
            </if>
            <if test="method != null">
                METHOD = #{method},
            </if>
            <if test="methodName != null">
                METHOD_NAME = #{methodName},
            </if>
            <if test="methodMemo != null">
                METHOD_MEMO = #{methodMemo},
            </if>
            <if test="invokeMinMaxNum != null">
                INVOKE_MIN_MAX_NUM = #{invokeMinMaxNum},
            </if>
            <if test="invokeDayMaxNum != null">
                INVOKE_DAY_MAX_NUM = #{invokeDayMaxNum},
            </if>
            <if test="isUpdated != null">
                IS_UPDATED = #{isUpdated},
            </if>
            <if test="authLevel != null">
                AUTH_LEVEL = #{authLevel},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime},
            </if>
            <if test="isExtras != null">
                IS_EXTRAS = #{isExtras} ,
            </if>
            <if test="isOpen != null">
                IS_OPEN = #{isOpen}
            </if>
        </set>
        where id = #{id}
    </update>

    <insert id="saveMethodCfg" parameterType="com.eason.transfer.openapi.core.api.dao.model.ApiMethod">
        insert into API_METHOD_CFG(METHOD_ID,VER,CFG_VALUE,IS_DELETED,CREATE_TIME)
        values(#{methodId},#{ver},#{cfgValue},#{isDeleted},#{createTime})

    </insert>

    <delete id="deleteMethodCfgById" parameterType="int">
        delete from API_METHOD_CFG where id=#{ID}
    </delete>


</mapper>