<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eason.transfer.openapi.core.client.chess.dao.mapper.TChessWalletCorrectionRecordPoMapper">
  <resultMap id="BaseResultMap" type="com.eason.transfer.openapi.core.client.chess.dao.entity.TChessWalletCorrectionRecordPo">
    <id column="record_id" jdbcType="VARCHAR" property="recordId" />
    <result column="site_id" jdbcType="VARCHAR" property="siteId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="game_kind_A" jdbcType="VARCHAR" property="gameKindA" />
    <result column="opt_type" jdbcType="VARCHAR" property="optType" />
    <result column="game_kind_B" jdbcType="VARCHAR" property="gameKindB" />
    <result column="opt_amount" jdbcType="VARCHAR" property="optAmount" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status_log" jdbcType="VARCHAR" property="statusLog" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    record_id, site_id, account, game_kind_A, opt_type, game_kind_B, opt_amount, balance, 
    status, create_time, update_time, status_log
  </sql>
  <select id="selectByExample" parameterType="com.eason.transfer.openapi.core.client.chess.dao.entity.TChessWalletCorrectionRecordPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_chess_wallet_correction_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_chess_wallet_correction_record
    where record_id = #{recordId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_chess_wallet_correction_record
    where record_id = #{recordId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.eason.transfer.openapi.core.client.chess.dao.entity.TChessWalletCorrectionRecordPoExample">
    delete from t_chess_wallet_correction_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eason.transfer.openapi.core.client.chess.dao.entity.TChessWalletCorrectionRecordPo">
    insert into t_chess_wallet_correction_record (record_id, site_id, account, 
      game_kind_A, opt_type, game_kind_B, 
      opt_amount, balance, status, 
      create_time, update_time, status_log
      )
    values (#{recordId,jdbcType=VARCHAR}, #{siteId,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{gameKindA,jdbcType=VARCHAR}, #{optType,jdbcType=VARCHAR}, #{gameKindB,jdbcType=VARCHAR}, 
      #{optAmount,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{statusLog,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.eason.transfer.openapi.core.client.chess.dao.entity.TChessWalletCorrectionRecordPo">
    insert into t_chess_wallet_correction_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        record_id,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="gameKindA != null">
        game_kind_A,
      </if>
      <if test="optType != null">
        opt_type,
      </if>
      <if test="gameKindB != null">
        game_kind_B,
      </if>
      <if test="optAmount != null">
        opt_amount,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="statusLog != null">
        status_log,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="gameKindA != null">
        #{gameKindA,jdbcType=VARCHAR},
      </if>
      <if test="optType != null">
        #{optType,jdbcType=VARCHAR},
      </if>
      <if test="gameKindB != null">
        #{gameKindB,jdbcType=VARCHAR},
      </if>
      <if test="optAmount != null">
        #{optAmount,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusLog != null">
        #{statusLog,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eason.transfer.openapi.core.client.chess.dao.entity.TChessWalletCorrectionRecordPoExample" resultType="java.lang.Long">
    select count(*) from t_chess_wallet_correction_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_chess_wallet_correction_record
    <set>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=VARCHAR},
      </if>
      <if test="record.siteId != null">
        site_id = #{record.siteId,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.gameKindA != null">
        game_kind_A = #{record.gameKindA,jdbcType=VARCHAR},
      </if>
      <if test="record.optType != null">
        opt_type = #{record.optType,jdbcType=VARCHAR},
      </if>
      <if test="record.gameKindB != null">
        game_kind_B = #{record.gameKindB,jdbcType=VARCHAR},
      </if>
      <if test="record.optAmount != null">
        opt_amount = #{record.optAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statusLog != null">
        status_log = #{record.statusLog,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_chess_wallet_correction_record
    set record_id = #{record.recordId,jdbcType=VARCHAR},
      site_id = #{record.siteId,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      game_kind_A = #{record.gameKindA,jdbcType=VARCHAR},
      opt_type = #{record.optType,jdbcType=VARCHAR},
      game_kind_B = #{record.gameKindB,jdbcType=VARCHAR},
      opt_amount = #{record.optAmount,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status_log = #{record.statusLog,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eason.transfer.openapi.core.client.chess.dao.entity.TChessWalletCorrectionRecordPo">
    update t_chess_wallet_correction_record
    <set>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="gameKindA != null">
        game_kind_A = #{gameKindA,jdbcType=VARCHAR},
      </if>
      <if test="optType != null">
        opt_type = #{optType,jdbcType=VARCHAR},
      </if>
      <if test="gameKindB != null">
        game_kind_B = #{gameKindB,jdbcType=VARCHAR},
      </if>
      <if test="optAmount != null">
        opt_amount = #{optAmount,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusLog != null">
        status_log = #{statusLog,jdbcType=VARCHAR},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eason.transfer.openapi.core.client.chess.dao.entity.TChessWalletCorrectionRecordPo">
    update t_chess_wallet_correction_record
    set site_id = #{siteId,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      game_kind_A = #{gameKindA,jdbcType=VARCHAR},
      opt_type = #{optType,jdbcType=VARCHAR},
      game_kind_B = #{gameKindB,jdbcType=VARCHAR},
      opt_amount = #{optAmount,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status_log = #{statusLog,jdbcType=VARCHAR}
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
</mapper>